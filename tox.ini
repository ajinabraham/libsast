[tox]
envlist = py39, py310
skipsdist = True

[testenv]
deps =
    poetry
commands = 
    poetry run pytest -v --cache-clear tests
setenv =
    SEMGREP_R2C_INTERNAL_EXPLICIT_SEMGREPIGNORE = ./tests/assets/files/.semgrepignore

[testenv:lint]
skip_install = true
deps =
    autopep8
    pydocstyle
    flake8
    flake8-broken-line
    flake8-bugbear
    flake8-builtins
    flake8-colors
    flake8-commas
    flake8-comprehensions
    flake8-docstrings
    flake8-eradicate
    flake8-import-order
    flake8-logging-format
    flake8-quotes
    flake8-self
    pep8-naming
    radon
commands =
    autopep8 --in-place --recursive --exclude venv,*.pyc .
    flake8 {posargs}

[testenv:bandit]
skip_install = true
deps =
    poetry
commands =
    poetry run bandit libsast -r

[testenv:build]
skip_install = true
allowlist_externals =
    bash
deps =
    poetry
commands =
    poetry build
    bash -c 'python -m pip install dist/*.whl'
    libsast

[testenv:clean]
deps =
skip_install = true
allowlist_externals =
    bash
    find
    rm
commands =
    find . -name "*.py[co]" -delete
    bash -c 'find . -name "__pycache__" -exec rm -fr \{\} \; -prune'
    bash -c 'find . -depth -name "*.egg-info" -exec rm -fr \{\} \;'
    rm -rf .pytest_cache
    rm -rf build
    rm -rf dist

; Reference for error codes:
; http://www.pydocstyle.org/en/latest/error_codes.html
[flake8]
enable-extensions = G
exclude =
    .tox
    .git
    __pycache__
    build
    dist
    venv
ignore =
    D101,
    # Missing docstring in public class
    D103,
    # Missing docstring in public function
    D104,
    # Missing docstring
    D107,
    # docstring is not mandatory
    D401,
    # Allow non imperative mood
    Q003,
    # Allow only ' for strings
    I100,
    # Use python sort imports
    SF01,
    # Allow Private member access
radon_max_cc = 10
max-line-length = 88